version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - mysql-data:/var/lib/mysql
  redis:
    image: redis:7.0.8-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000  # 2s(default)
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper
      - zookeeper-datalog:/var/lib/zookeeper/log
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"  # 외부 접근을 위한 EXTERNAL Listener
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092  # 9092 포트는  Kafka 내부 브로커 간 통신용(외부 접근을 막기 위해 localhost 사용). 29092는 외부 접근(spring-> kafka)을 위한 EXTERNAL Listener
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092  # Kafka가 클라이언트(Spring Boot, Kafka CLI 등)에게 "이 주소로 접속하라"고 광고하는 주소
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka-data:/var/lib/kafka/data
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-server
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - mysql
      - kafka
      - redis
volumes:
  mysql-data:
  redis-data:
  zookeeper-data:
  zookeeper-datalog:
  kafka-data:
networks:
  default:
    driver: bridge
